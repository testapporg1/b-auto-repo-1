# Quickstart: Bridge CLI with coverity:
#     https://documentation.blackduck.com/bundle/bridge/page/documentation/c_using-bridge-with-coverity-connect.html
# Complete List of Bridge Arguments:
#     https://documentation.blackduck.com/bundle/bridge/page/documentation/c_complete-list-of-bridge-commands.html
name: Coverity Bridge CLI Scan
on:
  push:
    branches:
      - main
      - master
      - develop
      - stage
      - release
  pull_request:
    branches:
      - main
      - master
      - develop
      - stage
      - release
  workflow_dispatch: {}
# GitHub token permissions for post-scan actions. Required for built-in GITHUB_TOKEN; if using a PAT with equivalent scopes, permissions block can be commented out.
permissions:
  contents: read                # Required for basic workflow operations
  pull-requests: write          # Required to add comments or create fix pull requests
jobs:
  coverity:
    runs-on: self-hosted
    env:
      BRIDGE_COVERITY_CONNECT_URL: ${{ vars.COVERITY_URL }}
      BRIDGE_COVERITY_CONNECT_USER_NAME: ${{ secrets.COVERITY_USER }}
      BRIDGE_COVERITY_CONNECT_USER_PASSWORD: ${{ secrets.COVERITY_PASSPHRASE }}
      BRIDGE_COVERITY_CONNECT_PROJECT_NAME: ${{ github.event.repository.name }}
      BRIDGE_COVERITY_CONNECT_STREAM_NAME: ${{ github.event.ref_name }}
      BRIDGE_COVERITY_LOCAL: "true"
      BRIDGE_GITHUB_USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Download & Setup Bridge CLI
        run: |-
          BRIDGE_CLI_DOWNLOAD_URL="https://repo.blackduck.com/bds-integrations-release/com/blackduck/integration/bridge/binaries/bridge-cli-bundle/latest"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pwsh -Command "
              Invoke-WebRequest $env:BRIDGE_CLI_DOWNLOAD_URL/bridge-cli-bundle-win64.zip -OutFile bridge.zip;
              Expand-Archive bridge.zip $env:RUNNER_TEMP;
              \$exe = (Get-ChildItem -Recurse -File $env:RUNNER_TEMP -Filter bridge-cli.exe | Select-Object -First 1).FullName;
              echo BRIDGE_CLI_INSTALL_DIR=\$exe | Out-File -Append -FilePath $env:GITHUB_ENV;
            "
          else
            OS=$([[ "$RUNNER_OS" == "macOS" ]] && ([[ $(uname -m) =~ arm ]] && echo macos_arm || echo macosx) || ([[ $(uname -m) =~ arm ]] && echo linux_arm || echo linux64))
            curl -sSL -o bridge.zip "$BRIDGE_CLI_DOWNLOAD_URL/bridge-cli-bundle-$OS.zip"
            unzip -qo bridge.zip -d "$RUNNER_TEMP"
            echo "BRIDGE_CLI_INSTALL_DIR=$(find $RUNNER_TEMP -type f -name bridge-cli | head -n1)" >> "$GITHUB_ENV"
          fi
      - name: Coverity Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        run: ${{ env.BRIDGE_CLI_INSTALL_DIR }} --stage connect --verbose --diagnostics
      - name: Coverity PR Scan
        if: ${{ github.event_name == 'pull_request' }}
        run: |-
          ${{ env.BRIDGE_CLI_INSTALL_DIR }} --stage connect --verbose  --diagnostics  \
             coverity.prcomment.enabled=true  \
             github.repository.branch.name=${{ github.ref_name }}  \
             github.repository.name=${{ github.event.repository.name }}  \
             github.repository.owner.name=${{ github.repository_owner }}  \
             github.repository.pull.number=${{ github.event.number }}
